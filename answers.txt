Q1. What is a gitignore file and what should it include for a Java project?
A1. It specifies intentionally untracked files that Git should ignore.
# Created by https://www.gitignore.io/api/eclipse

### Eclipse ###

.metadata
bin/
tmp/
*.tmp
*.bak
*.swp
*~.nib
local.properties
.settings/
.loadpath
.recommenders

# External tool builders
.externalToolBuilders/

# Locally stored "Eclipse launch configurations"
*.launch

# PyDev specific (Python IDE for Eclipse)
*.pydevproject

# CDT-specific (C/C++ Development Tooling)
.cproject

# Java annotation processor (APT)
.factorypath

# PDT-specific (PHP Development Tools)
.buildpath

# sbteclipse plugin
.target

# Tern plugin
.tern-project

# TeXlipse plugin
.texlipse

# STS (Spring Tool Suite)
.springBeans

# Code Recommenders
.recommenders/

# Scala IDE specific (Scala & Java development for Eclipse)
.cache-main
.scala_dependencies
.worksheet

### Eclipse Patch ###
# Eclipse Core      
.project

# JDT-specific (Eclipse Java Development Tools)     
.classpath

# End of https://www.gitignore.io/api/eclipse



Q2. What does fast-forward in Git mean?
A2. When we try to merge one commit with a commit that can be reached by following the first commitâ€™s history, Git simplifies things by moving the pointer forward because there is no divergent work to merge together.

Q3. Why should you have different branches?
A3. helps developers to work parallely by branching out from original code.

Q4. In a project how many remote Git repositories do you usually have?
A4. as many as remotes we want. but only one remote name 'origin'
